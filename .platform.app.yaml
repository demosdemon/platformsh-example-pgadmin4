# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html

# The name of this app. Must be unique within a project.
name: app

# The runtime the application uses.
type: python:3.7


# Variables to parameterize our build steps
variables:
  env:
    PYTHONPATH: pgadmin4
    PIP_NO_BINARY: psycopg2
    PGADMIN4_VERSION: '3.6'


# The relationships of the application with services of other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
  database: pgdata:postgresql


# The configuration of the app when it is exposed to the web.
web:
  # Whether your app should speak to the webserver via TCP or Unix socket
  # https://docs.platform.sh/configuration/app-containers.html#upstream
  upstream:
    socket_family: unix
  # Commands are run once after deployment to start the application process.
  commands:
    start: gunicorn -w 4 -b unix:$SOCKET pgAdmin4:app
  locations:
    /:
      passthru: true


# The size of the persistent disk of the application (in MB).
# Minimum is 256.
disk: 512


# Set a local R/W mount for pgAdmin4's appdata
mounts:
  pgadmin-data:
    source: local
    source_path: pgadmin-data


# The hooks executed at various points in the lifecycle of the application
hooks:
  # The build hook runs before the application is deployed, and is useful for
  # assembling the codebase.
  build: |
    set -ex
    unset NPM_CONFIG_PREFIX
    curl -s -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | sh
    export NVM_DIR="$HOME/.nvm"
    [ -e "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
    nvm current
    nvm install v10.14.2
    nvm use v10.14.2
    npm install -g yarn
    python -m pip install -U pip setuptools wheel
    pip install -U gunicorn
    cd pgadmin4
    pip install -r requirements.txt
    pip install -U Sphinx
    make -C docs/en_US -f Makefile.sphinx html
    cd web
    yarn install
    yarn bundle
    rm -r node_modules "$HOME/.nvm"
    python -O -m compileall .
