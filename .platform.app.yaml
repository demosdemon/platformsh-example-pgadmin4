# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html

# The name of this app. Must be unique within a project.
name: app

# The runtime the application uses.
type: python:3.7

# Variables to parameterize our build steps
variables:
  env:
    PIP_NO_BINARY: psycopg2

# The relationships of the application with services of other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
  database: pgdata:postgresql

# The configuration of the app when it is exposed to the web.
web:
  # Whether your app should speak to the webserver via TCP or Unix socket
  # https://docs.platform.sh/configuration/app-containers.html#upstream
  upstream:
    socket_family: unix
  # Commands are run once after deployment to start the application process.
  commands:
    start: gunicorn -w 1 --threads ${GUNICORN_THREADS:-25} -b unix:$SOCKET pgAdmin4:app
  locations:
    /:
      passthru: true

# The size of the persistent disk of the application (in MB).
# Minimum is 256.
disk: 16

# Set a local R/W mount for pgAdmin4's appdata
mounts:
  pgadmin-data:
    source: service
    service: ns
    source_path: files/pgadmin-data

# The hooks executed at various points in the lifecycle of the application
hooks:
  # The build hook runs before the application is deployed, and is useful for
  # assembling the codebase.
  build: $PLATFORM_APP_DIR/.platform.build.sh
  deploy: |
    # copy from old local mount to network mount
    if [ -f /mnt/pgadmin-data/pgadmin4.db -a ! -f /app/pgadmin-data/pgadmin4.db ]; then rsync -av /mnt/pgadmin-data/ /app/pgadmin-data/; fi
    python $PLATFORM_APP_DIR/deploy.py
